const fs = require('fs');
const path = require('path');

class RecomendadorMarketing {
    constructor() {
        this.config = this.cargarConfiguracion();
    }

    cargarConfiguracion() {
        const configPath = path.join(__dirname, '../config/settings.json');
        const configData = fs.readFileSync(configPath, 'utf8');
        return JSON.parse(configData);
    }

    // Formatear moneda
    formatearMoneda(valor) {
        return new Intl.NumberFormat('es-CO', {
            style: 'currency',
            currency: 'COP',
            minimumFractionDigits: 0,
            maximumFractionDigits: 0
        }).format(valor);
    }

    // Generar recomendaciones basadas en an√°lisis financiero
    generarRecomendacionesPersonalizadas(resultadosCalculos, datosUsuario) {
        const { resumen, detalles } = resultadosCalculos;
        const nombreUsuario = datosUsuario.nombreUsuario || 'emprendedor';
        const recomendaciones = {
            marketing: [],
            optimizacion: [],
            pricing: [],
            estrategias: [],
            alertas: []
        };

        // An√°lisis del margen de utilidad
        if (resumen.margenUtilidad < 20) {
            recomendaciones.alertas.push({
                tipo: 'warning',
                mensaje: `‚ö†Ô∏è ${nombreUsuario}, tu margen de utilidad (${resumen.margenUtilidad.toFixed(1)}%) es bajo. Considera optimizar costos o ajustar precios.`,
                prioridad: 'alta'
            });
            
            recomendaciones.optimizacion.push(
                "üîç Revisa y negocia con proveedores para reducir costos de materia prima",
                "‚ö° Busca formas de automatizar procesos para reducir mano de obra",
                "üì¶ Eval√∫a opciones de empaque m√°s econ√≥micas"
            );
        } else if (resumen.margenUtilidad > 50) {
            recomendaciones.pricing.push(
                "üí∞ Tu margen es excelente, considera reinvertir en calidad del producto",
                "üéØ Podr√≠as ser m√°s competitivo bajando ligeramente el precio",
                "üìà Invierte m√°s en marketing para aumentar volumen de ventas"
            );
        }

        // An√°lisis del punto de equilibrio
        if (detalles.puntoEquilibrio.unidades) {
            const unidadesEquilibrio = detalles.puntoEquilibrio.unidades;
            
            if (unidadesEquilibrio > 100) {
                recomendaciones.alertas.push({
                    tipo: 'warning',
                    mensaje: `üìä Necesitas vender ${unidadesEquilibrio} unidades para equilibrar. Es un n√∫mero alto, considera estrategias agresivas de marketing.`,
                    prioridad: 'alta'
                });
                
                recomendaciones.marketing.push(
                    "üöÄ Implementa una estrategia de lanzamiento con descuentos por volumen",
                    "ü§ù Busca socios comerciales o distribuidores",
                    "üì± Invierte fuertemente en publicidad digital (Facebook, Instagram Ads)"
                );
            } else if (unidadesEquilibrio < 20) {
                recomendaciones.estrategias.push(
                    "‚úÖ Tu punto de equilibrio es muy alcanzable, enf√≥cate en calidad y fidelizaci√≥n",
                    "üéØ Desarrolla productos complementarios para aumentar ticket promedio",
                    "‚≠ê Implementa un programa de clientes frecuentes"
                );
            }
        }

        // An√°lisis de costos dominantes
        const { costos } = detalles;
        const costoTotal = Object.values(costos).reduce((sum, valor) => sum + valor, 0);
        
        const materiaPrimaRatio = (costos.materia_prima || 0) / costoTotal;
        const manoObraRatio = (costos.mano_obra || 0) / costoTotal;
        
        if (materiaPrimaRatio > 0.6) {
            recomendaciones.optimizacion.push(
                "üõí La materia prima representa un alto % de tus costos. Busca proveedores alternativos",
                "üì¶ Considera comprar al por mayor para obtener mejores precios",
                "üîÑ Eval√∫a materiales sustitutos que mantengan la calidad"
            );
        }
        
        if (manoObraRatio > 0.4) {
            recomendaciones.optimizacion.push(
                "üë∑ Los costos de mano de obra son altos. Considera capacitaci√≥n para eficiencia",
                "ü§ñ Eval√∫a procesos que se puedan automatizar o simplificar",
                "‚è±Ô∏è Implementa medici√≥n de tiempos para optimizar procesos"
            );
        }

        // An√°lisis de proyecciones
        if (detalles.proyecciones) {
            const escenarioPesimista = detalles.proyecciones.pesimista;
            if (escenarioPesimista && escenarioPesimista.utilidadNeta < 0) {
                recomendaciones.alertas.push({
                    tipo: 'danger',
                    mensaje: `üö® En el escenario pesimista tendr√≠as p√©rdidas de ${this.formatearMoneda(Math.abs(escenarioPesimista.utilidadNeta))}. ¬°Plan de contingencia necesario!`,
                    prioridad: 'cr√≠tica'
                });
                
                recomendaciones.estrategias.push(
                    "üõ°Ô∏è Desarrolla un plan B con productos de menor costo",
                    "üíé Enf√≥cate en un nicho espec√≠fico para diferenciarte",
                    "ü§ù Considera alianzas para reducir riesgos"
                );
            }
        }

        // Recomendaciones generales de marketing basadas en configuraci√≥n
        const marketingGeneral = this.seleccionarRecomendacionesMarketing(5);
        recomendaciones.marketing.push(...marketingGeneral);

        // Consejos de optimizaci√≥n generales
        const optimizacionGeneral = this.seleccionarConsejosOptimizacion(5);
        recomendaciones.optimizacion.push(...optimizacionGeneral);

        return recomendaciones;
    }

    // Seleccionar recomendaciones de marketing aleatoriamente
    seleccionarRecomendacionesMarketing(cantidad = 5) {
        const todasLasRecomendaciones = [...this.config.recomendaciones_marketing];
        const seleccionadas = [];
        
        while (seleccionadas.length < cantidad && todasLasRecomendaciones.length > 0) {
            const indice = Math.floor(Math.random() * todasLasRecomendaciones.length);
            seleccionadas.push(todasLasRecomendaciones.splice(indice, 1)[0]);
        }
        
        return seleccionadas;
    }

    // Seleccionar consejos de optimizaci√≥n aleatoriamente
    seleccionarConsejosOptimizacion(cantidad = 5) {
        const todosLosConsejos = [...this.config.consejos_optimizacion];
        const seleccionados = [];
        
        while (seleccionados.length < cantidad && todosLosConsejos.length > 0) {
            const indice = Math.floor(Math.random() * todosLosConsejos.length);
            seleccionados.push(todosLosConsejos.splice(indice, 1)[0]);
        }
        
        return seleccionados;
    }

    // Generar mensaje motivacional personalizado
    generarMensajeMotivacional(resultadosCalculos, nombreUsuario) {
        const { resumen, detalles } = resultadosCalculos;
        const nombre = nombreUsuario || 'emprendedor';
        
        let mensaje = `üí™ **¬°Excelente trabajo, ${nombre}!** Has dado el primer paso fundamental: conocer tus n√∫meros.\n\n`;
        
        // Mensaje basado en el margen de utilidad
        if (resumen.margenUtilidad >= 30) {
            mensaje += `üéâ Tu margen de utilidad del ${resumen.margenUtilidad.toFixed(1)}% es excelente. Tienes una base s√≥lida para crecer.\n\n`;
        } else if (resumen.margenUtilidad >= 20) {
            mensaje += `üëç Tu margen de utilidad del ${resumen.margenUtilidad.toFixed(1)}% est√° en un rango saludable. Con algunas optimizaciones, puedes mejorarlo.\n\n`;
        } else {
            mensaje += `üí° Tu margen actual del ${resumen.margenUtilidad.toFixed(1)}% tiene potencial de mejora. Las recomendaciones te ayudar√°n a optimizarlo.\n\n`;
        }
        
        // Mensaje sobre el punto de equilibrio
        if (detalles.puntoEquilibrio.unidades) {
            const unidades = detalles.puntoEquilibrio.unidades;
            if (unidades <= 50) {
                mensaje += `‚≠ê Solo necesitas vender ${unidades} unidades para estar en equilibrio. ¬°Es muy alcanzable!\n\n`;
            } else if (unidades <= 100) {
                mensaje += `üìà Tu meta de ${unidades} unidades para equilibrar es realista con una buena estrategia de marketing.\n\n`;
            } else {
                mensaje += `üöÄ Aunque necesitas ${unidades} unidades para equilibrar, con las estrategias correctas lo lograr√°s.\n\n`;
            }
        }
        
        mensaje += `üåü **Recuerda**: Un negocio sostenible no solo depende del precio, sino de c√≥mo gestionas tus costos y c√≥mo conectas con tus clientes.\n\n`;
        mensaje += `üíº **¬°T√∫ puedes lograrlo!** Con IAtiva como tu aliado en crecimiento financiero, tienes todas las herramientas para triunfar.\n\n`;
        mensaje += `üìû Si necesitas asesor√≠a personalizada, cont√°ctanos: ${this.config.agente.contacto}`;
        
        return mensaje;
    }

    // Formatear recomendaciones para presentaci√≥n
    formatearRecomendacionesParaPresentacion(recomendaciones, nombreUsuario) {
        const nombre = nombreUsuario || '';
        let texto = `üéØ **RECOMENDACIONES PERSONALIZADAS**\n\n${nombre ? `${nombre}, ` : ''}aqu√≠ tienes consejos espec√≠ficos basados en tu an√°lisis:\n\n`;
        
        // Mostrar alertas primero si las hay
        if (recomendaciones.alertas.length > 0) {
            texto += `‚ö†Ô∏è **ALERTAS IMPORTANTES**\n`;
            recomendaciones.alertas.forEach(alerta => {
                texto += `${alerta.mensaje}\n`;
            });
            texto += `\n`;
        }
        
        // Estrategias de marketing
        if (recomendaciones.marketing.length > 0) {
            texto += `üì± **ESTRATEGIAS DE MARKETING**\n`;
            recomendaciones.marketing.slice(0, 5).forEach((estrategia, i) => {
                texto += `${i + 1}. ${estrategia}\n`;
            });
            texto += `\n`;
        }
        
        // Optimizaci√≥n de costos
        if (recomendaciones.optimizacion.length > 0) {
            texto += `üí∞ **OPTIMIZACI√ìN DE COSTOS**\n`;
            recomendaciones.optimizacion.slice(0, 5).forEach((consejo, i) => {
                texto += `${i + 1}. ${consejo}\n`;
            });
            texto += `\n`;
        }
        
        // Estrategias adicionales
        if (recomendaciones.estrategias.length > 0) {
            texto += `üéØ **ESTRATEGIAS ADICIONALES**\n`;
            recomendaciones.estrategias.forEach((estrategia, i) => {
                texto += `${i + 1}. ${estrategia}\n`;
            });
            texto += `\n`;
        }
        
        // Consejos de pricing
        if (recomendaciones.pricing.length > 0) {
            texto += `üí≤ **ESTRATEGIA DE PRECIOS**\n`;
            recomendaciones.pricing.forEach((consejo, i) => {
                texto += `${i + 1}. ${consejo}\n`;
            });
            texto += `\n`;
        }
        
        return texto;
    }

    // Generar plan de acci√≥n de 30 d√≠as
    generarPlanAccion30Dias(recomendaciones, resultadosCalculos, nombreUsuario) {
        const nombre = nombreUsuario || 'emprendedor';
        
        let plan = `üìÖ **PLAN DE ACCI√ìN - PRIMEROS 30 D√çAS**\n\n${nombre}, aqu√≠ tienes un plan estructurado para implementar:\n\n`;
        
        // Semana 1: Optimizaci√≥n inmediata
        plan += `**üìã SEMANA 1: OPTIMIZACI√ìN INMEDIATA**\n`;
        plan += `‚ñ° Contactar 3 proveedores alternativos para comparar precios\n`;
        plan += `‚ñ° Revisar procesos de producci√≥n para identificar desperdicios\n`;
        plan += `‚ñ° Calcular costos reales por unidad producida\n`;
        plan += `‚ñ° Definir precio final basado en an√°lisis de competencia\n\n`;
        
        // Semana 2: Preparaci√≥n de marketing
        plan += `**üì± SEMANA 2: PREPARACI√ìN DE MARKETING**\n`;
        plan += `‚ñ° Crear perfiles en redes sociales (Instagram, Facebook)\n`;
        plan += `‚ñ° Configurar WhatsApp Business profesional\n`;
        plan += `‚ñ° Dise√±ar contenido visual b√°sico del producto\n`;
        plan += `‚ñ° Preparar lista de primeros clientes potenciales\n\n`;
        
        // Semana 3: Lanzamiento suave
        plan += `**üöÄ SEMANA 3: LANZAMIENTO SUAVE**\n`;
        plan += `‚ñ° Ofrecer producto a c√≠rculo cercano (familia, amigos)\n`;
        plan += `‚ñ° Recopilar primeros testimonios y mejoras\n`;
        plan += `‚ñ° Ajustar proceso basado en feedback inicial\n`;
        plan += `‚ñ° Calcular m√©tricas reales vs proyecciones\n\n`;
        
        // Semana 4: Escalamiento
        plan += `**üìà SEMANA 4: ESCALAMIENTO**\n`;
        plan += `‚ñ° Implementar estrategia de referidos\n`;
        plan += `‚ñ° Iniciar publicidad pagada (presupuesto m√≠nimo)\n`;
        plan += `‚ñ° Establecer rutina de producci√≥n y ventas\n`;
        plan += `‚ñ° Evaluar resultados y ajustar estrategia\n\n`;
        
        // Objetivos cuantitativos
        if (resultadosCalculos.detalles.puntoEquilibrio.unidades) {
            const metaMensual = Math.ceil(resultadosCalculos.detalles.puntoEquilibrio.unidades * 1.2);
            plan += `üéØ **OBJETIVO DEL MES**\n`;
            plan += `Vender al menos ${metaMensual} unidades (20% sobre punto de equilibrio)\n`;
            plan += `Meta de ingresos: ${this.formatearMoneda(metaMensual * resultadosCalculos.resumen.precioVentaSugerido)}\n\n`;
        }
        
        plan += `üí™ **Recuerda**: La clave del √©xito es la ejecuci√≥n constante. ¬°Marca cada tarea completada!\n`;
        plan += `üìû Si necesitas apoyo: ${this.config.agente.contacto}`;
        
        return plan;
    }

    // Generar recomendaciones espec√≠ficas por industria (b√°sico)
    generarRecomendacionesPorIndustria(tipoNegocio = 'general') {
        const recomendaciones = {
            'alimentos': [
                "üçΩÔ∏è Enf√≥cate en la presentaci√≥n visual de tus productos",
                "üì± Usa Instagram y TikTok para mostrar el proceso de preparaci√≥n",
                "‚≠ê Solicita rese√±as espec√≠ficamente sobre sabor y calidad",
                "üöö Considera servicio de delivery para ampliar mercado"
            ],
            'servicios': [
                "üíº Crea un portafolio visual de trabajos anteriores",
                "ü§ù Implementa sistema de referidos con descuentos",
                "üìû Ofrece consultas gratuitas iniciales",
                "‚è∞ Define paquetes de servicios por horas"
            ],
            'productos': [
                "üì¶ Invierte en empaque atractivo y funcional",
                "üéØ Define claramente tu propuesta de valor",
                "üõí Considera ventas online adem√°s de f√≠sicas",
                "üìä Estudia precios de competencia directa"
            ],
            'general': this.seleccionarRecomendacionesMarketing(4)
        };
        
        return recomendaciones[tipoNegocio] || recomendaciones['general'];
    }

    // M√©todo principal para generar recomendaciones completas
    generarRecomendacionesCompletas(resultadosCalculos, datosUsuario) {
        try {
            const recomendacionesPersonalizadas = this.generarRecomendacionesPersonalizadas(
                resultadosCalculos, 
                datosUsuario
            );
            
            const mensajeMotivacional = this.generarMensajeMotivacional(
                resultadosCalculos, 
                datosUsuario.nombreUsuario
            );
            
            const recomendacionesFormateadas = this.formatearRecomendacionesParaPresentacion(
                recomendacionesPersonalizadas,
                datosUsuario.nombreUsuario
            );
            
            const planAccion = this.generarPlanAccion30Dias(
                recomendacionesPersonalizadas,
                resultadosCalculos,
                datosUsuario.nombreUsuario
            );
            
            return {
                exito: true,
                recomendacionesPersonalizadas,
                mensajeMotivacional,
                recomendacionesFormateadas,
                planAccion,
                timestamp: new Date().toISOString()
            };
            
        } catch (error) {
            return {
                exito: false,
                error: error.message,
                timestamp: new Date().toISOString()
            };
        }
    }
}

module.exports = RecomendadorMarketing;